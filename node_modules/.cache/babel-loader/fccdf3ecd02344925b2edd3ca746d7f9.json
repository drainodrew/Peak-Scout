{"ast":null,"code":"var _jsxFileName = \"/Users/andrewmanuel/SEI/superhi/book-club/book-club/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport GymContainer from './components/GymContainer';\nimport Header from './components/Header';\nimport { GlobalStyle } from './styles';\nimport DetailPanel from './components/DetailPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [gyms, setGyms] = useState([]);\n  const [selectedGym, setSelectedGym] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://book-club-json.herokuapp.com/books');\n        const gyms = await response.json();\n        setGyms(gyms);\n      } catch (errors) {\n        console.error(errors, \"error\");\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const pickGym = gym => {\n    setSelectedGym(gym);\n  };\n\n  const closePanel = () => {\n    set;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(GymContainer, {\n      gyms: gyms,\n      pickGym: pickGym\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), selectedGym && /*#__PURE__*/_jsxDEV(DetailPanel, {\n      gym: selectedGym\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"E1jk6jxM2hA30p6XCWvOWjLyRXI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/andrewmanuel/SEI/superhi/book-club/book-club/src/App.jsx"],"names":["React","useState","useEffect","GymContainer","Header","GlobalStyle","DetailPanel","App","gyms","setGyms","selectedGym","setSelectedGym","fetchData","response","fetch","json","errors","console","error","pickGym","gym","closePanel","set"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,SAAS,GAAG,YAAY;AAC7B,UAAI;AACD,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA5B;AAEA,cAAMN,IAAI,GAAG,MAAMK,QAAQ,CAACE,IAAT,EAAnB;AACEN,QAAAA,OAAO,CAACD,IAAD,CAAP;AACJ,OALD,CAKE,OAAOQ,MAAP,EAAe;AACfC,QAAAA,OAAO,CAACC,KAAR,CAAcF,MAAd,EAAsB,OAAtB;AACF;AACA,KATD;;AAWJJ,IAAAA,SAAS;AACN,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMO,OAAO,GAAIC,GAAD,IAAS;AACvBT,IAAAA,cAAc,CAACS,GAAD,CAAd;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBC,IAAAA,GAAG;AACJ,GAFD;;AAGA,sBACA;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEd,IAApB;AAA0B,MAAA,OAAO,EAAEW;AAAnC;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGT,WAAW,iBAAI,QAAC,WAAD;AAAa,MAAA,GAAG,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YAJlB;AAAA,kBADA;AAQD,CAlCD;;GAAMH,G;;KAAAA,G;AAoCN,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport GymContainer from './components/GymContainer';\nimport Header from './components/Header'\nimport { GlobalStyle } from './styles';\nimport DetailPanel from './components/DetailPanel';\n\nconst App = () => {\n  const [gyms, setGyms] = useState([])\n  const [selectedGym, setSelectedGym] = useState(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n     try {\n        const response = await fetch('https://book-club-json.herokuapp.com/books')\n        \n        const gyms = await response.json()\n          setGyms(gyms)       \n     } catch (errors) {\n       console.error(errors, \"error\" )\n    }\n    }\n    \nfetchData()\n  }, [])\n\n  const pickGym = (gym) => {\n    setSelectedGym(gym)\n  }\n\n  const closePanel = () => { \n    set\n  }\n  return (\n  <>\n    <GlobalStyle />\n    <Header /> \n    <GymContainer gyms={gyms} pickGym={pickGym} />\n    {selectedGym && <DetailPanel gym={selectedGym} />}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}